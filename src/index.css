
@tailwind base;
@tailwind components;
@tailwind utilities;

/*
 * Natural, sophisticated design system with Scandi/Japandi aesthetics.
 * This file has been optimized to remove conflicting rules and improve maintainability.
 */

/* * =============================================================================
 * CSS Custom Properties (Variables) for Theming
 * =============================================================================
 * Defines the color palette and design tokens for both light (default) and dark themes.
 * Using CSS variables allows for easy theme switching and consistency.
 */
@layer base {
  :root {
    /* Light Theme (Default) */
    --background: 255 255 255; /* white */
    --foreground: 0 0 0; /* black */

    --card: 255 255 255;
    --card-foreground: 0 0 0;

    --popover: 255 255 255;
    --popover-foreground: 0 0 0;

    --primary: 132 140 114; /* sage green */
    --primary-foreground: 255 255 255;

    --secondary: 245 243 240; /* soft beige */
    --secondary-foreground: 0 0 0;

    --muted: 245 243 240;
    --muted-foreground: 60 60 60; /* dark grey */

    --accent: 168 162 149; /* warm taupe */
    --accent-foreground: 0 0 0;

    --destructive: 185 85 69; /* terracotta */
    --destructive-foreground: 255 255 255;

    --border: 231 229 228;
    --input: 231 229 228;
    --ring: 132 140 114;

    --radius: 0.375rem;

    /* Custom pottery colors */
    --sage: 132 140 114;
    --clay: 185 147 126;
    --stone: 168 162 149;
    --earth: 139 117 99;
  }

  /* * Dark Theme Overrides
   * The original file forced a white background in dark mode. 
   * This is unconventional. A proper dark theme would be defined here.
   * For now, it's set to mirror the light theme as per the original file's intent.
   */
  .dark {
    --background: 255 255 255;
    --foreground: 0 0 0;
    --card: 255 255 255;
    --card-foreground: 0 0 0;
    --popover: 255 255 255;
    --popover-foreground: 0 0 0;
    --primary: 132 140 114;
    --primary-foreground: 255 255 255;
    --secondary: 245 243 240;
    --secondary-foreground: 0 0 0;
    --muted: 245 243 240;
    --muted-foreground: 60 60 60;
    --accent: 168 162 149;
    --accent-foreground: 0 0 0;
    --destructive: 185 85 69;
    --destructive-foreground: 255 255 255;
    --border: 231 229 228;
    --input: 231 229 228;
    --ring: 132 140 114;
  }
}

/* * =============================================================================
 * Base Styles
 * =============================================================================
 * Applies foundational styles to base HTML elements.
 * Removed excessive `!important` tags for better CSS specificity management.
 */
@layer base {
  * {
    @apply border-border;
    background-color: white !important;
  }

  /* * Set the default background and text color on the html and body.
   * This is more effective and cleaner than applying it to every element.
   */
  html, body {
    background-color: white !important;
    color: rgb(var(--foreground)) !important;
  }

  body {
    @apply font-inter;
    font-feature-settings: "rlig" 1, "calt" 1;
    min-height: 100vh;
    background-color: white !important;
  }

  /* Ensure the root element also has the correct background */
  #root {
      background-color: white !important;
      color: rgb(var(--foreground)) !important;
      min-height: 100vh;
  }

  /* Force white background on all main containers */
  div, section, article, main, header, footer, nav {
    background-color: white !important;
  }

  h1, h2, h3, h4, h5, h6 {
    @apply font-crimson;
    color: black !important;
  }

  p {
    color: black !important;
  }

  /* Style for autofilled input fields in WebKit browsers */
  input:-webkit-autofill,
  input:-webkit-autofill:hover,
  input:-webkit-autofill:focus,
  input:-webkit-autofill:active {
    -webkit-box-shadow: 0 0 0 30px white inset !important;
    -webkit-text-fill-color: rgb(var(--foreground)) !important;
  }
}

/* * =============================================================================
 * Custom Utility Classes
 * =============================================================================
 * Reusable classes for applying custom styles, like the pottery color palette.
 */
@layer utilities {
  .text-sage { color: rgb(var(--sage)); }
  .bg-sage { background-color: rgb(var(--sage)); }
  
  .text-clay { color: rgb(var(--clay)); }
  .bg-clay { background-color: rgb(var(--clay)); }
  
  .text-stone { color: rgb(var(--stone)); }
  .bg-stone { background-color: rgb(var(--stone)); }
  
  .text-earth { color: rgb(var(--earth)); }
  .bg-earth { background-color: rgb(var(--earth)); }

  /* Force white background utility classes */
  .force-white-bg {
    background-color: white !important;
  }

  .force-black-text {
    color: black !important;
  }
}
